AstronautScheduler
Overview
The AstronautScheduler project is a console-based application designed to help astronauts organize their daily schedules. The application allows users to add, remove, and view daily tasks. Each task has a description, start time, end time, and priority level. This project demonstrates the implementation of several design patterns, including Singleton, Factory, and Observer patterns.


Components
Task.java: Represents a task with a description, start time, end time, and priority level.
TaskFactory.java: Uses the Factory pattern to create Task objects.
ScheduleManager.java: Uses the Singleton pattern to ensure there is only one instance managing the schedule.
Observer.java: An interface for observers to implement.
TaskConflictObserver.java: Implements the Observer pattern to notify users of task conflicts.
ConsoleLogger.java: Logs application usage and errors.
App.java: The main application logic.
Main.java: The entry point of the application.


Singleton Pattern
ScheduleManager: Ensures there is only one instance of the schedule manager managing the tasks.
Factory Pattern
TaskFactory: Creates Task objects, encapsulating the object creation logic.
Observer Pattern
TaskConflictObserver: Observes the ScheduleManager and notifies users of task conflicts.
Observer: An interface for observers to implement.


How to Run
Clone the Repository:
git clone https://github.com/yourusername/AstronautScheduler.git
